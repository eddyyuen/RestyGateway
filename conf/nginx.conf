#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  ;
    error_log logs/error.log ;

    sendfile        on;

    keepalive_timeout  65;

    lua_package_path '$prefix/lua/?.lua;$prefix/lua/lua-resty-http/lib/?.lua;$prefix/lua/lua-resty-jwt-0.2.0/lib/?.lua;;$prefix/lualib/?.lua;$prefix/lua/lua-resty-hmac/lib/?.lua;;';

    # 这里设置为 off，是为了避免每次修改之后都要重新 reload 的麻烦。
    # 在生产环境上务必确保 lua_code_cache 设置成 on。
    lua_code_cache on;

    #lua_shared_dict routes_config_list 10m;

    # 第一次初始化
    # init_by_lua_file lua/routes_config.lua;

    resolver 8.8.8.8;
    server {
        listen       9010;
        server_name  localhost;

        charset utf-8;
        default_type  text/plain;
        #access_log  logs/host.access.log  main;

        location / {
             content_by_lua_file lua/api_content.lua;
        }

       location /404 {
             content_by_lua 'ngx.say("404 not found")';
        }

    }

}
